#!/bin/bash

set -eu

export DOTFILES_ROOT="$HOME/dotfiles"

#===========================================================================#
# common functions
#===========================================================================#

print() {
  printf "\e[4mdotfiles\e[0m: "
  echo "$@"
}

cmd_exec() {
  print "$@"
  "$@"
}

command_exist() {
  which "$1" >/dev/null 2>&1
  return $?
}

subcommand_exists() {
  local cmd=$1
  grep -q "^cmd_$cmd(" "$DOTFILES_ROOT/bin/dotfiles"
}

#===========================================================================#
# command functions
#===========================================================================#

cmd_setup-osx() {
  cmd_exec cd $DOTFILES_ROOT

  # Install Homebrew
  if ! command_exist brew; then
    cmd_exec /usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
  fi

  # Install all dependencies in a Brewfile.
  cmd_exec brew bundle --verbose

  # Install anyenv
  cmd_exec git clone https://github.com/riywo/anyenv ~/.anyenv
  # Init anyenv
  export PATH="$HOME/.anyenv/bin:$PATH"
  eval "$(anyenv init -)"
  cmd_exec anyenv install rbenv
  cmd_exec anyenv install pyenv

  # Setup Atom
  if ! command_exist apm; then
    cmd_exec apm install sync-settings
  fi
}

cmd_link() {
  cmd_exec cd "$DOTFILES_ROOT/home"

  for filename in .??*; do
    local file_dotfiles="$DOTFILES_ROOT/home/$filename"
    local file_home="$HOME/$filename"

    if [[ -e $file_home ]]; then
      if [[ ! -L $file_home ]]; then
        print "Warning: $file_home exists but is not a symlink."
      fi
    else
      print "Creating symlink at $file_home"
      cmd_exec ln -s "$file_dotfiles" "$file_home"
    fi
  done
}

#===========================================================================#

main() {
  local cmd=$1
  shift

  if subcommand_exists "$cmd"; then
    "cmd_$cmd" "$@"
  else
    echo "ERROR: '$cmd' is not a dotfiles command."
    exit 1
  fi
}

main "$@"
